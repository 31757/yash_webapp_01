package ecommerce.yash_webapp_01.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import ecommerce.yash_webapp_01.dao.ProductDao;
import ecommerce.yash_webapp_01.model.ProductModel;

@Controller
@RequestMapping("/admin")
public class AdminController {

	@Autowired
ProductDao productDao;

@RequestMapping(value = "/viewall")
public ModelAndView viewAllProductsAdmin() {
	ModelAndView modelAndView = new ModelAndView("adminpage");
	modelAndView.addObject("productData", productDao.getAll());
	modelAndView.addObject("sub", new ProductModel());
	return modelAndView;
}

@RequestMapping(value = "/delete/{procat}")
public String deleteproduct(@PathVariable("procat") Integer id) {
	p.delete(id);
	return "redirect:/admin/viewall";
}

/*	@RequestMapping(value = "/insert", method = RequestMethod.POST)
public String insertProduct(@Valid @ModelAttribute("id") Product product, BindingResult results, Model model) {
	if(results.hasErrors()) {
		model.addAttribute("sub", product);
		model.addAttribute("productData", productDao.getAll());
		return "adminpage";
	}
	productDao.addproduct(product);
	if (product.getId() == 0) {
		productDao.addproduct(product);
	} else {

		productDao.updateProduct(product);
	}

	return "redirect:/admin/viewall";
}

*/
@RequestMapping(value = "/insert", method = RequestMethod.POST)
public String insertProduct(@Valid @ModelAttribute("sub") ProductModel product, BindingResult results, Model model) {
	if(results.hasErrors()) {
		model.addAttribute("sub", product);
		model.addAttribute("products", p.getAll());
		return ("admin");
	}
	if (product.getProdid() == 0) {
		// new product, add it
		p.insert(product);
	} else {
		// existing product, call update
		p.update(product);
	}
	return ("redirect:/admin/viewall");
}


@RequestMapping("/edit/{id}")
public String editProduct(@PathVariable("id") int id, Model model) {
	model.addAttribute("sub", productDao.getProductById(id));
	model.addAttribute("productData", productDao.getAll());
	return "adminpage";
}


@Autowired
private ProductDao p;
@RequestMapping(value = { "/admin" })
public ModelAndView admin() {
	ModelAndView mv = new ModelAndView("admin");
	p.getAll();
	return mv;
}
@RequestMapping(value = "/delete/{id}")
public String deletedata(@PathVariable("id") Integer st) {
	p.delete(st);	
	return "redirect:/admin/viewall";
}
@RequestMapping(value = "/viewall")
public String all(Model model) {
	model.addAttribute("product", new ProductModel());
	model.addAttribute("products", p.getAll());
	return "admin";
}

@RequestMapping(value = "/insert", method = RequestMethod.GET)
public String insert(@Valid @ModelAttribute("product") ProductModel product,BindingResult results, Model model) {
	if(results.hasErrors())
	{
		model.addAttribute("product",product);
		model.addAttribute("products",p.getAll());
		return "admin";
	}
	if (product.getProdid() == 0) {
		// new product, add it
		p.insert(product);
	} else {
		// existing product, call update
		p.update(product);
	}
	return "redirect:/admin/viewall";
}

}
